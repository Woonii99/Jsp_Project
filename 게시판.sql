CREATE TABLE USERS (
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PWD VARCHAR2(20) NULL,
    USER_NAME VARCHAR2(30) NULL,
    USER_EMAIL VARCHAR2(50) NULL,
    USER_BIRTHDAY CHAR(8) NULL,
    USER_STATUS CHAR(1) DEFAULT 'Y' NULL,
    REG_DATE DATE DEFAULT SYSDATE NULL,
    
    CONSTRAINT PK_USERS PRIMARY KEY(USER_ID),
    CONSTRAINT DOMAIN_USER_STATUS CHECK(USER_STATUS IN('Y', 'N')) 
);

COMMENT ON TABLE USERS IS '사용자';
COMMENT ON COLUMN USERS.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN USERS.USER_PWD IS '사용자 비밀번호';
COMMENT ON COLUMN USERS.USER_NAME IS '사용자 이름';
COMMENT ON COLUMN USERS.USER_EMAIL IS '사용자 이메일';
COMMENT ON COLUMN USERS.USER_BIRTHDAY IS '사용자 생년월일';
COMMENT ON COLUMN USERS.USER_STATUS IS '사용자 상태';
COMMENT ON COLUMN USERS.REG_DATE IS '사용자 등록일';

CREATE TABLE FREE_BBS (
    FREE_BBS_SEQ NUMBER(12) NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    FREE_BBS_TITLE VARCHAR2(150) NULL,
    FREE_BBS_CONTENT CLOB NULL,
    FREE_BBS_READ_CNT NUMBER(10) DEFAULT 0 NULL,
    FREE_BBS_RECOM_CNT NUMBER(10) DEFAULT 0 NULL,
    FREE_BBS_STATUS CHAR(1) DEFAULT 'Y' NULL,
    REG_DATE DATE DEFAULT SYSDATE NULL,
    UPDATE_DATE DATE NULL,
    
    CONSTRAINT PK_FREE_BBS PRIMARY KEY(FREE_BBS_SEQ),
    CONSTRAINT FK1_FREE_BBS FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT DOMAIN_FREE_BBS_STATUS CHECK(FREE_BBS_STATUS IN('Y', 'N'))
);

COMMENT ON TABLE FREE_BBS IS '자유 게시판';
COMMENT ON COLUMN FREE_BBS.FREE_BBS_SEQ IS '게시글 번호';
COMMENT ON COLUMN FREE_BBS.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN FREE_BBS.FREE_BBS_TITLE IS '게시글 제목';
COMMENT ON COLUMN FREE_BBS.FREE_BBS_CONTENT IS '게시글 내용';
COMMENT ON COLUMN FREE_BBS.FREE_BBS_READ_CNT IS '게시글 조회수';
COMMENT ON COLUMN FREE_BBS.FREE_BBS_RECOM_CNT IS '게시글 추천수';
COMMENT ON COLUMN FREE_BBS.FREE_BBS_STATUS IS '게시글 상태';
COMMENT ON COLUMN FREE_BBS.REG_DATE IS '게시글 등록일';
COMMENT ON COLUMN FREE_BBS.UPDATE_DATE IS '게시글 수정일';

CREATE TABLE RESTO (
    RESTO_TEL VARCHAR2(20) NOT NULL,
    RESTO_TITLE VARCHAR2(150) NULL,
    RESTO_IMG_LINK VARCHAR2(255) NULL,
    RESTO_DESCRIPTION VARCHAR2(255) NULL,
    RESTO_CATEGORY VARCHAR2(50) NULL,
    RESTO_ADDRESS VARCHAR2(255) NULL,
    RESTO_ROAD_ADDRESS VARCHAR2(255) NULL,
    RESTO_MAP_X NUMBER(10) NULL, 
    RESTO_MAP_Y NUMBER(10) NULL,

    CONSTRAINT PK_RESTO PRIMARY KEY(RESTO_TEL)
);

COMMENT ON TABLE RESTO IS '음식점';
COMMENT ON COLUMN RESTO.RESTO_TEL IS '음식점 전화번호';
COMMENT ON COLUMN RESTO.RESTO_TITLE IS '음식점 상호명';
COMMENT ON COLUMN RESTO.RESTO_IMG_LINK IS '음식점 이미지 링크';
COMMENT ON COLUMN RESTO.RESTO_DESCRIPTION IS '음식점 설명';
COMMENT ON COLUMN RESTO.RESTO_CATEGORY IS '음식점 카테고리';
COMMENT ON COLUMN RESTO.RESTO_ADDRESS IS '음식점 주소';
COMMENT ON COLUMN RESTO.RESTO_ROAD_ADDRESS IS '음식점 도로명주소';
COMMENT ON COLUMN RESTO.RESTO_MAP_X IS '음식점 X좌표';
COMMENT ON COLUMN RESTO.RESTO_MAP_Y IS '음식점 Y좌표';

CREATE TABLE RESTO_BBS (
    RESTO_BBS_SEQ NUMBER(12) NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    RESTO_TEL VARCHAR2(20) NOT NULL,
    RESTO_BBS_TITLE VARCHAR2(150) NULL,
    RESTO_BBS_CONTENT CLOB NULL,
    RESTO_BBS_READ_CNT NUMBER(10) DEFAULT 0 NULL,
    RESTO_BBS_RECOM_CNT NUMBER(10) DEFAULT 0 NULL,
    RESTO_BBS_RATING DECIMAL(3, 1) NOT NULL,
    RESTO_BBS_STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    REG_DATE DATE DEFAULT SYSDATE NULL,
    UPDATE_DATE DATE NULL,
    
    CONSTRAINT PK_RESTO_BBS PRIMARY KEY(RESTO_BBS_SEQ),
    CONSTRAINT FK1_RESTO_BBS FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT FK2_RESTO_BBS FOREIGN KEY(RESTO_TEL) REFERENCES RESTO(RESTO_TEL),
    CONSTRAINT DOMAIN_RESTO_BBS_STATUS CHECK(RESTO_BBS_STATUS IN('Y', 'N'))
);

COMMENT ON TABLE RESTO_BBS IS '리뷰 게시판';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_SEQ IS '게시글 번호';
COMMENT ON COLUMN RESTO_BBS.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN RESTO_BBS.RESTO_TEL IS '음식점 전화번호';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_TITLE IS '게시글 제목';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_CONTENT IS '게시글 내용';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_READ_CNT IS '게시글 조회수';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_RECOM_CNT IS '게시글 추천수';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_RATING IS '게시글 평점';
COMMENT ON COLUMN RESTO_BBS.RESTO_BBS_STATUS IS '게시글 상태';
COMMENT ON COLUMN RESTO_BBS.REG_DATE IS '게시글 등록일';
COMMENT ON COLUMN RESTO_BBS.UPDATE_DATE IS '게시글 수정일';

CREATE TABLE FREE_BBS_FILES (
    BBS_FILE_SEQ NUMBER(3) NOT NULL,
    FREE_BBS_SEQ NUMBER(12) NOT NULL,
    BBS_FILE_ORG_NAME VARCHAR2(100) NULL,
    BBS_FILE_NAME VARCHAR2(50) NULL,
    BBS_FILE_EXT VARCHAR2(20) NULL,
    BBS_FILE_SIZE NUMBER(12) NULL,
    REG_DATE DATE DEFAULT SYSDATE NULL,
    
    CONSTRAINT PK_FREE_BBS_FILES PRIMARY KEY(BBS_FILE_SEQ, FREE_BBS_SEQ),
    CONSTRAINT FK1_FREE_BBS_FILES FOREIGN KEY(FREE_BBS_SEQ) REFERENCES FREE_BBS(FREE_BBS_SEQ)
);

COMMENT ON TABLE FREE_BBS_FILES IS '자유 게시글 첨부 파일';
COMMENT ON COLUMN FREE_BBS_FILES.BBS_FILE_SEQ IS '파일 번호';
COMMENT ON COLUMN FREE_BBS_FILES.FREE_BBS_SEQ IS '게시글 번호';
COMMENT ON COLUMN FREE_BBS_FILES.BBS_FILE_ORG_NAME IS '원본 파일명';
COMMENT ON COLUMN FREE_BBS_FILES.BBS_FILE_NAME IS '파일명';
COMMENT ON COLUMN FREE_BBS_FILES.BBS_FILE_EXT IS '파일 확장자';
COMMENT ON COLUMN FREE_BBS_FILES.BBS_FILE_SIZE IS '파일 크기';
COMMENT ON COLUMN FREE_BBS_FILES.REG_DATE IS '파일 등록일';

CREATE TABLE FREE_COM (
    FREE_COM_SEQ NUMBER(3) NOT NULL,
    FREE_BBS_SEQ NUMBER(12) NOT NULL,
    USER_ID VARCHAR(20) NOT NULL,
    FREE_COM_CONTENT VARCHAR2(255) NULL,
    FREE_COM_STATUS CHAR(1) DEFAULT 'Y' NULL,
    REG_DATE DATE DEFAULT SYSDATE NULL,
    
    CONSTRAINT PK_FREE_COM PRIMARY KEY(FREE_COM_SEQ, FREE_BBS_SEQ),
    CONSTRAINT FK1_FREE_COM FOREIGN KEY(FREE_BBS_SEQ) REFERENCES FREE_BBS(FREE_BBS_SEQ),
    CONSTRAINT FK2_FREE_COM FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT DOMAIN_FREE_COM_STATUS CHECK(FREE_COM_STATUS IN('Y', 'N'))
);

COMMENT ON TABLE FREE_COM IS '자유 댓글';
COMMENT ON COLUMN FREE_COM.FREE_COM_SEQ IS '댓글 번호';
COMMENT ON COLUMN FREE_COM.FREE_BBS_SEQ IS '게시글 번호';
COMMENT ON COLUMN FREE_COM.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN FREE_COM.FREE_COM_CONTENT IS '댓글 내용';
COMMENT ON COLUMN FREE_COM.FREE_COM_STATUS IS '댓글 상태';
COMMENT ON COLUMN FREE_COM.REG_DATE IS '댓글 등록일';

CREATE TABLE RESTO_COM (
    RESTO_COM_SEQ NUMBER(3) NOT NULL,
    RESTO_BBS_SEQ NUMBER(12) NOT NULL,
    USER_ID VARCHAR(20) NOT NULL,
    RESTO_COM_CONTENT VARCHAR2(255) NULL,
    RESTO_COM_STATUS CHAR(1) DEFAULT 'Y' NULL,
    REG_DATE DATE DEFAULT SYSDATE NULL,
    
    CONSTRAINT PK_RESTO_COM PRIMARY KEY(RESTO_COM_SEQ, RESTO_BBS_SEQ),
    CONSTRAINT FK1_RESTO_COM FOREIGN KEY(RESTO_BBS_SEQ) REFERENCES RESTO_BBS(RESTO_BBS_SEQ),
    CONSTRAINT FK2_RESTO_COM FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT DOMAIN_RESTO_COM_STATUS CHECK(RESTO_COM_STATUS IN('Y', 'N'))
);

COMMENT ON TABLE RESTO_COM IS '음식점 댓글';
COMMENT ON COLUMN RESTO_COM.RESTO_COM_SEQ IS '댓글 번호';
COMMENT ON COLUMN RESTO_COM.RESTO_BBS_SEQ IS '게시글 번호';
COMMENT ON COLUMN RESTO_COM.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN RESTO_COM.RESTO_COM_CONTENT IS '댓글 내용';
COMMENT ON COLUMN RESTO_COM.RESTO_COM_STATUS IS '댓글 상태';
COMMENT ON COLUMN RESTO_COM.REG_DATE IS '댓글 등록일';

-- 유저 DAO 쿼리문

-- 유저 정보 조회 --
SELECT NVL(USER_PWD, '') USER_PWD, NVL(USER_NAME, '') USER_NAME, NVL(USER_EMAIL, '') USER_EMAIL, NVL(USER_BIRTHDAY, '') USER_BIRTHDAY, NVL(USER_STATUS, 'N') USER_STATUS, NVL(TO_CHAR(REG_DATE, 'YYYYMMDD HH24:MI:SS'), '') REG_DATE
FROM USERS 
WHERE USER_ID = ?;

-- 유저 아이디 조회 --
SELECT NVL(USER_ID, '') USER_ID
FROM USERS
WHERE USER_NAME = ? AND 
    USER_EMAIL = ?;
        
-- 유저 회원가입 --
INSERT INTO USERS(USER_ID, USER_PWD, USER_NAME, USER_EMAIL, USER_BIRTHDAY, USER_STATUS, REG_DATE) 
VALUES (?, ?, ?, ?, ?, 'Y', SYSDATE);

-- 유저 아이디 중복검사 --
SELECT COUNT(USER_ID) CNT
FROM USERS
WHERE USER_ID = ?;

-- 유저 이메일 중복검사 --
SELECT COUNT(USER_ID) CNT 
FROM USERS
WHERE USER_EMAIL = ?;

-- 유저 비밀번호 업데이트 --
UPDATE USERS
SET USER_PWD = ?
WHERE USER_ID = ?;

-- 유저 정보 업데이트 --
UPDATE USERS
SET USER_PWD = ?, USER_NAME = ?, USER_EMAIL = ?, USER_BIRTHDAY = ?
WHERE USER_ID = ?;
        
-- 유저 회원 탈퇴
UPDATE USERS
SET USER_STATUS = 'N'
WHERE USER_ID = ?;

-- 게시판 DAO 쿼리문 : 자유게시판

-- 자유 게시글 리스트 조회(페이징 처리)
SELECT FREE_BBS_SEQ, USER_ID, FREE_BBS_TITLE, FREE_BBS_CONTENT, FREE_BBS_READ_CNT, FREE_BBS_RECOM_CNT, REG_DATE, UPDATE_DATE, USER_NAME
FROM (
    SELECT ROWNUM NUM, FREE_BBS_SEQ, USER_ID, FREE_BBS_TITLE, FREE_BBS_CONTENT, FREE_BBS_READ_CNT, FREE_BBS_RECOM_CNT, REG_DATE, UPDATE_DATE, USER_NAME
    FROM (
        SELECT
            A.FREE_BBS_SEQ FREE_BBS_SEQ,
            A.USER_ID USER_ID,
            NVL(A.FREE_BBS_TITLE, '') FREE_BBS_TITLE,
            NVL(A.FREE_BBS_CONTENT, '') FREE_BBS_CONTENT,
            NVL(A.FREE_BBS_READ_CNT, 0) FREE_BBS_READ_CNT,
            NVL(A.FREE_BBS_RECOM_CNT, 0) FREE_BBS_RECOM_CNT,
            NVL(TO_CHAR(A.REG_DATE, 'YYYYMMDD HH24:MI:SS'), '') REG_DATE,
            NVL(B.USER_NAME, '') USER_NAME
        FROM FREE_BBS A, USERS B
        WHERE A.FREE_BBS_STATUS <> 'N' AND
            A.FREE_BBS_TITLE LIKE '%' || ? || '%' AND
            (A.FREE_BBS_TITLE LIKE '%' || ? || '%' OR DBMS_LOB.INSTR(A.FREE_BBS_CONTENT, ?) > 0) AND
            B.USER_NAME LIKE '%' || ? || '%' AND
            A.USER_ID = B.USER_ID 
        ORDER BY A.FREE_BBS_SEQ DESC
    ) 
)
WHERE NUM BETWEEN ? AND ?;

-- 페이징을 위한 전체 게시글 수 조회 --
SELECT COUNT(A.FREE_BBS_SEQ) CNT
FROM FREE_BBS A, USERS B
WHERE A.FREE_BBS_STATUS <> 'N' AND
    A.FREE_BBS_TITLE LIKE '%' || ? || '%' AND
    (A.FREE_BBS_TITLE LIKE '%' || ? || '%' OR DBMS_LOB.INSTR(A.FREE_BBS_CONTENT, ?) > 0) AND
    B.USER_NAME LIKE '%' || ? || '%' AND
    A.USER_ID = B.USER_ID;
    
-- 자유 게시글 조회(게시글 자세히보기, 삭제, 수정 등에 사용할 쿼리문)
-- 게시글 자세히 보기시에는 삭제 유무에 따른 로직들을 추가하고 싶으므로 게시글 상태를 조회 컬럼에 추가한다.
SELECT
    A.USER_ID USER_ID,
    NVL(A.FREE_BBS_TITLE, '') FREE_BBS_TITLE,
    NVL(A.FREE_BBS_CONTENT, '') FREE_BBS_CONTENT,
    NVL(A.FREE_BBS_READ_CNT, 0) FREE_BBS_READ_CNT,
    NVL(A.FREE_BBS_RECOM_CNT, 0) FREE_BBS_RECOM_CNT,
    NVL(A.FREE_BBS_STATUS, 'N') FREE_BBS_STATUS,
    NVL(TO_CHAR(A.REG_DATE, 'YYYYMMDD HH24:MI:SS'), '') REG_DATE,
    NVL(A.UPDATE_DATE, '') UPDATE_DATE,
    NVL(B.USER_NAME, '') USER_NAME
FROM
    FREE_BBS A, USERS B
WHERE
    A.FREE_BBS_SEQ = ? AND
    A.USER_ID = B.USER_ID;

-- 게시물 시퀀스 작성(반드시 실행하기) --
CREATE SEQUENCE FREE_BOARD_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999
NOCACHE
NOCYCLE;

-- 자유 게시글 작성전 SEQ 값 가져오기(실행하지 말것)
SELECT FREE_BOARD_SEQ.NEXTVAL FROM DUAL;

-- 자유 게시글 작성 
INSERT INTO FREE_BBS(FREE_BBS_SEQ, USER_ID, FREE_BBS_TITLE, FREE_BBS_CONTENT, FREE_BBS_READ_CNT, FREE_BBS_RECOM_CNT, FREE_BBS_STATUS, REG_DATE) 
VALUES (?, ?, ?, ?, 0, 0, 'Y', SYSDATE);

-- 자유 게시글 수정 1 : 게시글 수정하기
UPDATE FREE_BBS
SET BBS_TITLE = ?, BBS_CONTENT = ?, UPDATE_DATE = SYSDATE
WHERE FREE_BBS_SEQ = ?;

-- 자유 게시글 수정 2 : 게시글 조회수 증가
UPDATE FREE_BBS
SET FREE_BBS_READ_CNT = FREE_BBS_READ_CNT + 1
WHERE FREE_BBS_SEQ = ?;

-- 자유 게시글 수정 3 : 게시글 추천수 증가
UPDATE FREE_BBS
SET FREE_BBS_RECOM_CNT = FREE_BBS_RECOM_CNT + 1
WHERE FREE_BBS_SEQ = ?;

-- 자유 게시글 수정 4 : 게시글 삭제 ('N'으로 변경)
UPDATE FREE_BBS
SET FREE_BBS_STATUS = 'N'
WHERE FREE_BBS_SEQ = ?;


-- 게시판 DAO 쿼리문 : 자유게시판

-- 자유 게시글 리스트 조회(페이징 처리)
SELECT FREE_BBS_SEQ, USER_ID, FREE_BBS_TITLE, FREE_BBS_CONTENT, FREE_BBS_READ_CNT, FREE_BBS_RECOM_CNT, REG_DATE, UPDATE_DATE, USER_NAME
FROM (
    SELECT ROWNUM NUM, FREE_BBS_SEQ, USER_ID, FREE_BBS_TITLE, FREE_BBS_CONTENT, FREE_BBS_READ_CNT, FREE_BBS_RECOM_CNT, REG_DATE, UPDATE_DATE, USER_NAME
    FROM (
        SELECT
            A.FREE_BBS_SEQ FREE_BBS_SEQ,
            A.USER_ID USER_ID,
            NVL(A.FREE_BBS_TITLE, '') FREE_BBS_TITLE,
            NVL(A.FREE_BBS_CONTENT, '') FREE_BBS_CONTENT,
            NVL(A.FREE_BBS_READ_CNT, 0) FREE_BBS_READ_CNT,
            NVL(RC.CNT, 0) FREE_BBS_RECOM_CNT,
            NVL(TO_CHAR(A.REG_DATE, 'YYYYMMDD HH24:MI:SS'), '') REG_DATE,
            NVL(B.USER_NAME, '') USER_NAME
        FROM 
            FREE_BBS A, USERS B, 
            (SELECT FREE_BBS_SEQ, COUNT(FREE_BBS_SEQ) CNT 
            FROM FREE_BBS_RECOM 
            GROUP BY FREE_BBS_SEQ) RC
        WHERE A.FREE_BBS_STATUS <> 'N' AND
            A.FREE_BBS_TITLE LIKE '%' || ? || '%' AND
            (A.FREE_BBS_TITLE LIKE '%' || ? || '%' OR DBMS_LOB.INSTR(A.FREE_BBS_CONTENT, ?) > 0) AND
            B.USER_NAME LIKE '%' || ? || '%' AND
            A.FREE_BBS_SEQ = RC.FREE_BBS_SEQ(+) AND
            A.USER_ID = B.USER_ID 
        ORDER BY A.FREE_BBS_SEQ DESC
    ) 
)
WHERE NUM BETWEEN ? AND ?;

-- 페이징을 위한 전체 게시글 수 조회 --
SELECT COUNT(A.FREE_BBS_SEQ) CNT
FROM FREE_BBS A, USERS B
WHERE A.FREE_BBS_STATUS <> 'N' AND
    A.FREE_BBS_TITLE LIKE '%' || ? || '%' AND
    (A.FREE_BBS_TITLE LIKE '%' || ? || '%' OR DBMS_LOB.INSTR(A.FREE_BBS_CONTENT, ?) > 0) AND
    B.USER_NAME LIKE '%' || ? || '%' AND
    A.USER_ID = B.USER_ID;
    

    
-- 자유 게시글 조회(게시글 자세히보기, 삭제, 수정 등에 사용할 쿼리문)
-- 게시글 자세히 보기시에는 삭제 유무에 따른 로직들을 추가하고 싶으므로 게시글 상태를 조회 컬럼에 추가한다.
SELECT
    A.USER_ID USER_ID,
    NVL(A.FREE_BBS_TITLE, '') FREE_BBS_TITLE,
    NVL(A.FREE_BBS_CONTENT, '') FREE_BBS_CONTENT,
    NVL(A.FREE_BBS_READ_CNT, 0) FREE_BBS_READ_CNT,
    NVL(RC.CNT, 0) FREE_BBS_RECOM_CNT,
    NVL(A.FREE_BBS_STATUS, 'N') FREE_BBS_STATUS,
    NVL(TO_CHAR(A.REG_DATE, 'YYYYMMDD HH24:MI:SS'), '') REG_DATE,
    NVL(A.UPDATE_DATE, '') UPDATE_DATE,
    NVL(B.USER_NAME, '') USER_NAME
FROM
    FREE_BBS A, USERS B,
    (SELECT FREE_BBS_SEQ, COUNT(FREE_BBS_SEQ) CNT FROM FREE_BBS_RECOM GROUP BY FREE_BBS_SEQ) RC
WHERE
    A.FREE_BBS_SEQ = ? AND
    A.USER_ID = B.USER_ID AND
    A.FREE_BBS_SEQ = RC.FREE_BBS_SEQ(+);
    
-- 자유 게시글 작성전 SEQ 값 가져오기(실행하지 말것)
SELECT FREE_BBS_SEQ.NEXTVAL FROM DUAL;

-- 자유 게시글 작성 
INSERT INTO FREE_BBS(FREE_BBS_SEQ, USER_ID, FREE_BBS_TITLE, FREE_BBS_CONTENT, FREE_BBS_READ_CNT, FREE_BBS_RECOM_CNT, FREE_BBS_STATUS, REG_DATE) 
VALUES (?, ?, ?, ?, 0, 0, 'Y', SYSDATE);

-- 자유 게시글 수정 1 : 게시글 수정하기
UPDATE FREE_BBS
SET BBS_TITLE = ?, BBS_CONTENT = ?, UPDATE_DATE = SYSDATE
WHERE FREE_BBS_SEQ = ?;

-- 자유 게시글 수정 2 : 게시글 조회수 증가
UPDATE FREE_BBS
SET FREE_BBS_READ_CNT = FREE_BBS_READ_CNT + 1
WHERE FREE_BBS_SEQ = ?;

-- 자유 게시글 수정 3 : 게시글 추천수 증가
UPDATE FREE_BBS
SET FREE_BBS_RECOM_CNT = FREE_BBS_RECOM_CNT + 1
WHERE FREE_BBS_SEQ = ?;

-- 자유 게시글 수정 4 : 게시글 삭제 ('N'으로 변경)
UPDATE FREE_BBS
SET FREE_BBS_STATUS = 'N'
WHERE FREE_BBS_SEQ = ?;

--게시글 TOP3 조회
SELECT FREE_BBS_TITLE
  FROM (SELECT FREE_BBS_TITLE
          FROM FREE_BBS
         WHERE FREE_BBS_STATUS = 'Y'
         ORDER BY FREE_BBS_READ_CNT DESC)
WHERE ROWNUM <= 3;

-- 댓글 시퀀스 작성(반드시 실행하기) --
CREATE SEQUENCE FREE_COM_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999
NOCACHE
NOCYCLE;

--------------------------------------
UPDATE USERS
SET USER_STATUS = 'Y'
WHERE USER_NAME = '우니언';

COMMIT;

SELECT FREE_BBS_TITLE
FROM (SELECT FREE_BBS_SEQ, FREE_BBS_TITLE, USER_ID, REG_DATE, FREE_BBS_READ_CNT
        FROM FREE_BBS
        WHERE FREE_BBS_STATUS = 'Y'
        ORDER BY REG_DATE DESC)
WHERE ROWNUM <= 3;

SELECT FREE_BBS_TITLE, USER_ID, REG_DATE 
FROM FREE_BBS 
WHERE FREE_BBS_STATUS = 'Y' 
ORDER BY REG_DATE DESC 
FETCH FIRST 3 ROWS ONLY;